{"version":3,"file":"index.js","sources":["../src/components/Settings.tsx","../src/emojify/index.ts","../src/index.js"],"sourcesContent":["/**\n * Powercord Plugin Emojifier\n *\n * @license MIT\n * @copyright (C) 2021 Luke Zhang\n */\n\nimport {React} from \"powercord/webpack\"\nimport {SwitchItem} from \"powercord/components/settings\"\n\ninterface Props {\n    getSetting(name: string, def: boolean): boolean\n    toggleSetting(name: string): void\n}\n\ninterface State {\n    emojifierEnabled: boolean\n}\n\nexport default class Settings extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props)\n\n        this.state = {\n            emojifierEnabled: this.props.getSetting(\"emojifierEnabled\", false),\n        }\n    }\n\n    render = () => (\n        <SwitchItem\n            note=\"Auto owoify toggle.\"\n            value={this.state.emojifierEnabled}\n            onChange={() => {\n                this.setState({emojifierEnabled: !this.state.emojifierEnabled})\n                this.props.toggleSetting(\"emojifierEnabled\")\n            }}\n        >\n            Enable\n        </SwitchItem>\n    )\n}\n","/**\n * Emojifier\n *\n * @license MIT\n * @copyright (c) 2020 oldpepper12, 2021 Luke Zhang\n * @see {@link https://github.com/oldpepper12/emojibot2/blob/master/docs/main.js}\n */\n\nimport data from \"../../data/emoji-mappings.json\"\n\nconst sample = <T>(items: T[]): T => items[Math.floor(Math.random() * items.length)] as T\n\nfunction* range(start: number, stop?: number, step = 1): Generator<number, void, void> {\n    for (let i = stop ? start : 0; i < (stop ?? start); i += step) {\n        yield i\n    }\n\n    return\n}\n\nconst validChars = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"0\",\n    \"_\",\n    \"-\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n]\n\nconst stripWord = (word: string): string =>\n    word\n        .split(\"\")\n        .filter((c) => validChars.includes(c))\n        .join(\"\")\n        .toLowerCase()\n\nconst emojifyLine = (text: string, lenProbabilities = [1, 1, 1, 1, 2, 2, 3]): string =>\n    text\n        .split(\" \")\n        .map((word) => {\n            const strippedWord = stripWord(word)\n\n            if (strippedWord) {\n                const emojiString = Array.from(range(sample(lenProbabilities)))\n                    .map(() => sample((data as {[key: string]: string[]})[strippedWord] ?? []))\n                    .join(\"\")\n\n                return word + emojiString + \" \"\n            } else {\n                return word + \" \"\n            }\n        })\n        .join(\"\")\n\nexport const emojify = (text: string, lenProbabilities = [1, 1, 1, 1, 2, 2, 3]) =>\n    text\n        .split(/\\n/g)\n        .map((line) => emojifyLine(line, lenProbabilities))\n        .join(\"\\n\")\n\nexport default emojify\n","/**\n * Powercord Plugin Emojifier\n *\n * @license MIT\n * @copyright (C) 2021 Luke Zhang\n */\n\nimport {React, getModule} from \"powercord/webpack\"\nimport {inject, uninject} from \"powercord/injector\"\nimport {Plugin} from \"powercord/entities\"\nimport Settings from \"./components/Settings\"\nimport emojify from \"./emojify\"\n\nexport default class Emojify extends Plugin {\n    async startPlugin() {\n        powercord.api.settings.registerSettings(this.entityID, {\n            category: this.entityID,\n            label: \"Emojifier\",\n            render: (props) =>\n                React.createElement(Settings, {\n                    main: this,\n                    ...props,\n                }),\n        })\n\n        const parentThis = this // For some reason this has to be done\n        const messageEvents = await getModule([\"sendMessage\"])\n\n        inject(\n            \"emojifierSend\",\n            messageEvents,\n            \"sendMessage\",\n            (args) => {\n                if (parentThis.settings.get(\"emojifierEnabled\", false)) {\n                    let text = args[1].content\n                    text = emojify(text)\n                    args[1].content = text\n                }\n\n                return args\n            },\n            true,\n        )\n\n        powercord.api.commands.registerCommand({\n            command: \"emojify\",\n            description: \"emojify your message\",\n            usage: \"{c} [ text ]\",\n            executor: (args) => ({send: true, result: emojify(args.join(\" \"))}),\n        })\n\n        powercord.api.commands.registerCommand({\n            command: \"toggleEmojify\",\n            description: `emojify all of your messages`,\n            executor: () => {\n                let emojifierAutoToggle = this.settings.get(\"emojifierEnabled\", false)\n\n                this.settings.set(\"emojifierEnabled\", !emojifierAutoToggle)\n            },\n        })\n    }\n\n    pluginWillUnload() {\n        powercord.api.settings.unregisterSettings(this.entityID)\n        uninject(\"emojifierSend\")\n        powercord.api.commands.unregisterCommand(\"toggleEmojify\")\n        powercord.api.commands.unregisterCommand(\"emojify\")\n    }\n}\n"],"names":["Settings","React","PureComponent","[object Object]","props","super","this","SwitchItem","note","value","state","emojifierEnabled","onChange","setState","toggleSetting","getSetting","sample","items","Math","floor","random","length","validChars","emojifyLine","text","lenProbabilities","split","map","word","strippedWord","filter","c","includes","join","toLowerCase","stripWord","Array","from","start","stop","step","i","range","data","emojify","line","Emojify","Plugin","powercord","api","settings","registerSettings","entityID","category","label","render","createElement","main","parentThis","messageEvents","getModule","inject","args","get","content","commands","registerCommand","command","description","usage","executor","send","result","emojifierAutoToggle","set","unregisterSettings","uninject","unregisterCommand"],"mappings":"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"}